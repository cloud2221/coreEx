version: 2

defaults: &defaults
  docker:
    - image: circleci/node:10-browsers
  working_directory: ~/axe-core

restore_dependency_cache: &restore_dependency_cache
  restore_cache:
    keys:
      - v{{ .Environment.CACHE_VERSION }}-npm-cache-{{ checksum "package.json" }}
      - v{{ .Environment.CACHE_VERSION }}-npm-cache-

set_npm_auth: &set_npm_auth
  run: npm config set "//registry.npmjs.org/:_authToken" $NPM_AUTH

jobs:
  # Fetch and cache dependencies.
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - <<: *set_npm_auth
      - <<: *restore_dependency_cache
      - run: npm install
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-npm-cache-{{ checksum "package.json" }}
          paths:
            - node_modules

  # Install geckodriver and firefox
  install_drivers:
    <<: *defaults
    steps:
      - run:
        name: Install geckodriver
        command: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-linux64.tar.gz
          tar -xvzf geckodriver*
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin
      - run:
          name: Install firefox
          command: |
            sudo apt-get remove firefox-mozilla-build binutils
            sudo sh -c "echo 'deb http://ftp.hr.debian.org/debian sid main' >> /etc/apt/sources.list"
            sudo apt-get update
            sudo apt-get install -t sid firefox && firefox --version

  # Run ESLINT
  lint:
    <<: *defaults
    steps:
      - checkout
      - <<: *restore_dependency_cache
      - run: npm run eslint

  # Run the test suite.
  test:
    <<: *defaults
    steps:
      - checkout
      - <<: *restore_dependency_cache
      - run: npm run test

  # Release a "next" version
  next_release:
    <<: *defaults
    steps:
      - checkout
      - <<: *set_npm_auth
      - <<: *restore_dependency_cache
      - run: npm run next-release
      - run: npm publish --tag=next

  # Release a "production" version
  production_release:
    <<: *defaults
    steps:
      - checkout
      - <<: *set_npm_auth
      - <<: *restore_dependency_cache
      - run: npm run build
      - run: npm publish

workflows:
  version: 2
  build:
    jobs:
      # install deps
      - dependencies
      # Run linting
      - lint:
          requires:
            - dependencies
      # Run tests on all commits, but after installing dependencies
      - test:
          requires:
            - dependencies
      # Hold for approval
      - hold:
          type: approval
          requires:
            - test
          filters:
            # We only want to hold on these two branches, as PR review acts as approval for PRs
            branches:
              only:
                - master
                - develop
      # Run a next release on "develop" commits, but only after the tests pass and dependencies are installed
      - next_release:
          requires:
            - dependencies
            - test
            - hold
          filters:
            branches:
              only: develop
      # Run a production release on "master" commits, but only after the tests pass and dependencies are installed
      - production_release:
          requires:
            - dependencies
            - test
            - hold
          filters:
            branches:
              only: master
